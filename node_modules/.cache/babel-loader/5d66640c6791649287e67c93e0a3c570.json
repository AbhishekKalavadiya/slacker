{"ast":null,"code":"import _slicedToArray from\"C:\\\\React\\\\slacker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import StarBorderIcon from'@material-ui/icons/StarBorder';import InfoIcon from'@material-ui/icons/Info';import db from'../firebase-config';import Messages from'./Messages';import ChatInput from'./ChatInput';import'./Chat.css';function Chat(){var _useParams=useParams(),roomId=_useParams.roomId;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),roomDetails=_useState2[0],setRoomDetails=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messageDetails=_useState4[0],setMessageDetails=_useState4[1];useEffect(function(){if(roomId){db.collection('rooms').doc(roomId).onSnapshot(function(snapshot){return setRoomDetails(snapshot.data());});}db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp','asc').onSnapshot(function(snapshot){return setMessageDetails(snapshot.docs.map(function(doc){return doc.data();}));});},[roomId]);return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat__header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerLeft\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"chat__channelName\"},/*#__PURE__*/React.createElement(\"strong\",null,\"# \",roomDetails===null||roomDetails===void 0?void 0:roomDetails.name),/*#__PURE__*/React.createElement(StarBorderIcon,null))),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__headerRight\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(InfoIcon,null),\" Details\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__messages\"},messageDetails.map(function(_ref){var message=_ref.message,timestamp=_ref.timestamp,user=_ref.user,userImage=_ref.userImage;return/*#__PURE__*/React.createElement(Messages,{message:message,timestamp:timestamp,user:user,userImage:userImage});})),/*#__PURE__*/React.createElement(ChatInput,{channelName:roomDetails===null||roomDetails===void 0?void 0:roomDetails.name,channelId:roomId}));}export default Chat;","map":{"version":3,"sources":["C:/React/slacker/src/components/Chat.js"],"names":["React","useState","useEffect","useParams","StarBorderIcon","InfoIcon","db","Messages","ChatInput","Chat","roomId","roomDetails","setRoomDetails","messageDetails","setMessageDetails","collection","doc","onSnapshot","snapshot","data","orderBy","docs","map","name","message","timestamp","user","userImage"],"mappings":"8IAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,EAAP,KAAe,oBAAf,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,YAAP,CAEA,QAASC,CAAAA,IAAT,EAAgB,gBAEON,SAAS,EAFhB,CAEJO,MAFI,YAEJA,MAFI,eAG2BT,QAAQ,CAAC,IAAD,CAHnC,wCAGLU,WAHK,eAGQC,cAHR,8BAIgCX,QAAQ,CAAC,EAAD,CAJxC,yCAILY,cAJK,eAIWC,iBAJX,eAMZZ,SAAS,CAAC,UAAI,CACV,GAAGQ,MAAH,CAAU,CACNJ,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BN,MAA3B,EAAmCO,UAAnC,CAA8C,SAACC,QAAD,QAC1CN,CAAAA,cAAc,CACVM,QAAQ,CAACC,IAAT,EADU,CAD4B,EAA9C,EAKH,CAEDb,EAAE,CAACS,UAAH,CAAc,OAAd,EACKC,GADL,CACSN,MADT,EAEKK,UAFL,CAEgB,UAFhB,EAGKK,OAHL,CAGa,WAHb,CAG0B,KAH1B,EAIKH,UAJL,CAIgB,SAACC,QAAD,QACRJ,CAAAA,iBAAiB,CACbI,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAkB,SAAAN,GAAG,QAAIA,CAAAA,GAAG,CAACG,IAAJ,EAAJ,EAArB,CADa,CADT,EAJhB,EAUH,CAnBQ,CAmBP,CAACT,MAAD,CAnBO,CAAT,CAqBA,mBACI,2BAAK,SAAS,CAAC,MAAf,eACI,2BAAK,SAAS,CAAC,cAAf,eACI,2BAAK,SAAS,CAAC,kBAAf,eACI,0BAAI,SAAS,CAAC,mBAAd,eACI,uCAAWC,WAAX,SAAWA,WAAX,iBAAWA,WAAW,CAAEY,IAAxB,CADJ,cAEI,oBAAC,cAAD,MAFJ,CADJ,CADJ,cAOI,2BAAK,SAAS,CAAC,mBAAf,eACI,0CACI,oBAAC,QAAD,MADJ,YADJ,CAPJ,CADJ,cAcI,2BAAK,SAAS,CAAC,gBAAf,EAEQV,cAAc,CAACS,GAAf,CAAmB,kBAAGE,CAAAA,OAAH,MAAGA,OAAH,CAAYC,SAAZ,MAAYA,SAAZ,CAAuBC,IAAvB,MAAuBA,IAAvB,CAA8BC,SAA9B,MAA8BA,SAA9B,oBACf,oBAAC,QAAD,EACI,OAAO,CAAIH,OADf,CAEI,SAAS,CAAEC,SAFf,CAGI,IAAI,CAAEC,IAHV,CAII,SAAS,CAAEC,SAJf,EADe,EAAnB,CAFR,CAdJ,cA0BI,oBAAC,SAAD,EAAW,WAAW,CAAEhB,WAAF,SAAEA,WAAF,iBAAEA,WAAW,CAAEY,IAArC,CAA2C,SAAS,CAAEb,MAAtD,EA1BJ,CADJ,CA8BH,CAED,cAAeD,CAAAA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport db from '../firebase-config'\r\nimport Messages from './Messages'\r\nimport ChatInput from './ChatInput'\r\nimport './Chat.css'\r\n\r\nfunction Chat() {\r\n\r\n    const { roomId } = useParams()\r\n    const [roomDetails, setRoomDetails] =  useState(null)\r\n    const [messageDetails, setMessageDetails] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot)=>(\r\n                setRoomDetails(\r\n                    snapshot.data()\r\n                )\r\n            ))\r\n        }\r\n\r\n        db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot((snapshot) => (\r\n                setMessageDetails( \r\n                    snapshot.docs.map(doc => doc.data())\r\n                )\r\n            ))\r\n\r\n    },[roomId])\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat__header'>\r\n                <div className='chat__headerLeft'>\r\n                    <h4 className='chat__channelName'>\r\n                        <strong># {roomDetails?.name}</strong>\r\n                        <StarBorderIcon />\r\n                    </h4>\r\n                </div>\r\n                <div className='chat__headerRight'>\r\n                    <p>\r\n                        <InfoIcon/> Details\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='chat__messages'>\r\n                {\r\n                    messageDetails.map(({ message, timestamp, user , userImage }) => (\r\n                        <Messages \r\n                            message = {message}\r\n                            timestamp={timestamp}\r\n                            user={user}\r\n                            userImage={userImage}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <ChatInput channelName={roomDetails?.name} channelId={roomId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}