{"version":3,"sources":["StateProvider.js","components/Header.js","firebase-config.js","components/SidebarOption.js","components/Sidebar.js","reducer.js","components/Login.js","components/Messages.js","components/ChatInput.js","components/Chat.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","initialState","reducer","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","src","photoURL","alt","displayName","placeholder","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","GoogleAuth","GoogleAuthProvider","SidebarOption","Icon","title","addChannelOption","id","history","useHistory","onClick","channelName","prompt","collection","add","name","push","Sidebar","useState","channels","setChannels","useEffect","onSnapshot","snapshot","docs","map","doc","data","email","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarksIcon","PeopleAltIcon","AppsIcon","FilterIcon","ExpandLessIcon","ExpandMoreIcon","AddBoxIcon","channel","actionTypes","state","action","console","log","type","Login","dispatch","Button","signInWithPopup","then","result","catch","error","message","Messages","userImage","timestamp","Date","toDate","toUTCString","ChatInput","channelId","input","setInput","toLowerCase","onChange","e","target","preventDefault","FieldValue","serverTimestamp","Chat","roomId","useParams","roomDetails","setRoomDetails","messageDetails","setMessageDetails","orderBy","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ab1a260.chunk.js","sourcesContent":["import React, { useContext, useReducer, createContext} from 'react'\r\n\r\nexport const StateContext = createContext()\r\n\r\nexport const StateProvider = ({ initialState, reducer, children }) => (\r\n    <StateContext.Provider value={useReducer(  reducer, initialState)}> \r\n        {children}\r\n    </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)","import React from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nimport \"./Header.css\"\r\n\r\nfunction Header() {\r\n\r\n    const [{user}, dispatch] = useStateValue()\r\n\r\n    return (\r\n        <div className='header'>\r\n            {/* Header left */}\r\n            <div className='header__left'>\r\n                    <Avatar         //Avatar for logged in user\r\n                        className='header__avatar'\r\n                        src={user?.photoURL}\r\n                        alt={user?.displayName}\r\n                    />\r\n                    <AccessTimeIcon />      {/* time icon */}\r\n            </div>\r\n\r\n            {/* Header center */}\r\n            <div className='header__center'>\r\n                <SearchIcon />      {/* search icon */}\r\n                <input  placeholder='enter the search'/>       {/* input */}\r\n            </div>\r\n\r\n            {/* Header right */}\r\n            <div className='header__right'>\r\n                <HelpIcon />        {/* help icon */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDKaMqpX4Dmx7qVET4RCAIh2qHqb7I5dVM\",\r\n    authDomain: \"slacker-ff14f.firebaseapp.com\",\r\n    databaseURL: \"https://slacker-ff14f.firebaseio.com\",\r\n    projectId: \"slacker-ff14f\",\r\n    storageBucket: \"slacker-ff14f.appspot.com\",\r\n    messagingSenderId: \"356007896960\",\r\n    appId: \"1:356007896960:web:787086b6b9a66b4235c365\",\r\n    measurementId: \"G-BBVETG7C3B\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebaseApp.firestore()\r\nexport const auth = firebase.auth()\r\nexport const GoogleAuth = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport default db","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport db from '../firebase-config'\r\nimport './SidebarOption.css'\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id}) {\r\n\r\n    const history = useHistory()\r\n\r\n    const selectChannel = () => {\r\n        if(id){\r\n            history.push(`/room/${id}`)\r\n        } else {\r\n            history.push(title)\r\n        }\r\n    }\r\n\r\n    const addChannel = () =>{\r\n        const channelName = prompt('Pleae enter channel name')\r\n\r\n        if(channelName){\r\n            db.collection('rooms').add({\r\n                name: channelName\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='sidebarOption' onClick={addChannelOption ? addChannel : selectChannel}>\r\n            {Icon && <Icon className='sidebarOption__icon'/>}\r\n            {Icon ? (\r\n                <h3>{title}</h3>\r\n            ) : (\r\n                <h3 className='sidebarOption__channel'>\r\n                    <span className='sidebarOption__hash'>#</span>{title}</h3>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n","import React, { useState, useEffect } from 'react'\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport SidebarOption from './SidebarOption'\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport BookmarksIcon from '@material-ui/icons/Bookmarks';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport FilterIcon from '@material-ui/icons/Filter';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox'\r\nimport db from '../firebase-config'\r\nimport { useStateValue } from '../StateProvider'\r\n\r\nimport './Sidebar.css'\r\n\r\nfunction Sidebar() {\r\n\r\n    const [channels, setChannels] = useState([])\r\n    const [{user}] = useStateValue()\r\n\r\n    //run this when the sidebar component load\r\n    useEffect(() => {\r\n        db.collection(\"rooms\").onSnapshot(snapshot => (\r\n            setChannels(\r\n                snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    name: doc.data().name\r\n                }))\r\n            )\r\n        ))\r\n    }, [])\r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar__header'>\r\n                <div className='sidebar__info'>\r\n                    <h2>{user?.displayName}</h2>\r\n                    <h3>\r\n                        <FiberManualRecordIcon />\r\n                        {user?.email}\r\n                    </h3>\r\n                </div>\r\n                <CreateIcon />\r\n            </div>\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\"/>\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\"/>\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\"/>\r\n            <SidebarOption Icon={BookmarksIcon} title=\"Channel Browser\"/>\r\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & User groups\"/>\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\"/>\r\n            <SidebarOption Icon={FilterIcon} title=\"File Browser\"/>\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show Less\"/>\r\n            <hr />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\"/>\r\n            <hr />\r\n            <SidebarOption Icon={AddBoxIcon} addChannelOption title='Add Channel' />\r\n            \r\n            {\r\n                channels.map(channel => (\r\n                    <SidebarOption title={channel.name} id={channel.id}/>    \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n    user: null\r\n}\r\n\r\nexport const actionTypes = {\r\n    SET_USER: 'SET_USER'\r\n} \r\n\r\nconst reducer = ( state, action ) => {\r\n    console.log(action)\r\n\r\n    switch (action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { auth, GoogleAuth } from '../firebase-config'\r\nimport { useStateValue } from '../StateProvider'\r\nimport { actionTypes } from '../reducer'\r\nimport './Login.css'\r\n\r\nfunction Login() {\r\n\r\n    const [state, dispatch] = useStateValue()\r\n\r\n    const  signIn = () => {\r\n        auth.signInWithPopup(GoogleAuth)\r\n            .then((result) => {\r\n                console.log(result)\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user\r\n                })\r\n            }).catch(error => {\r\n            console.log(error.message)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__container'>\r\n                <img src='https://cdn.iconscout.com/icon/free/png-512/slack-10-555455.png' alt=''/>\r\n                <h1>Sign In to <span className='login__containerName'>#Slacker</span></h1>\r\n                <Button onClick={signIn}>Sign in with Google</Button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport './Messages.css'\r\n\r\nfunction Messages({ message, user, userImage, timestamp}) {\r\n    return (\r\n        <div className='message'>\r\n            <img src={userImage} />\r\n            <div className='message__info'>\r\n                <h4>{user}  <span className='message__timestamp'>{new Date(timestamp?.toDate()).toUTCString()}</span></h4>\r\n                <p>{message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n","import React, {useState} from 'react'\r\nimport db from '../firebase-config'\r\nimport firebase from 'firebase'\r\nimport { useStateValue } from '../StateProvider'\r\nimport './ChatInput.css'\r\n\r\nfunction ChatInput({channelName, channelId}) {\r\n\r\n    const [input, setInput] = useState()\r\n    const [{user}] = useStateValue()\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(channelId){\r\n            db.collection('rooms').doc(channelId).collection('messages').add({\r\n                message: input,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                user: user.displayName,\r\n                userImage: user.photoURL\r\n            })\r\n\r\n        }\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n        <div className='chatInput'>\r\n            <form>\r\n                <input \r\n                    value={input}\r\n                    placeholder={`Message to #${channelName?.toLowerCase()}`}\r\n                    onChange = {e=>setInput(e.target.value)}\r\n                />\r\n                <button type='submit' onClick={sendMessage}>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport db from '../firebase-config'\r\nimport Messages from './Messages'\r\nimport ChatInput from './ChatInput'\r\nimport './Chat.css'\r\n\r\nfunction Chat() {\r\n\r\n    const { roomId } = useParams()\r\n    const [roomDetails, setRoomDetails] =  useState(null)\r\n    const [messageDetails, setMessageDetails] = useState([])\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot)=>(\r\n                setRoomDetails(\r\n                    snapshot.data()\r\n                )\r\n            ))\r\n        }\r\n\r\n        db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot((snapshot) => (\r\n                setMessageDetails( \r\n                    snapshot.docs.map(doc => doc.data())\r\n                )\r\n            ))\r\n\r\n    },[roomId])\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat__header'>\r\n                <div className='chat__headerLeft'>\r\n                    <h4 className='chat__channelName'>\r\n                        <strong># {roomDetails?.name}</strong>\r\n                        <StarBorderIcon />\r\n                    </h4>\r\n                </div>\r\n                <div className='chat__headerRight'>\r\n                    <p>\r\n                        <InfoIcon/> Details\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='chat__messages'>\r\n                {\r\n                    messageDetails.map(({ message, timestamp, user , userImage }) => (\r\n                        <Messages \r\n                            message = {message}\r\n                            timestamp={timestamp}\r\n                            user={user}\r\n                            userImage={userImage}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <ChatInput channelName={roomDetails?.name} channelId={roomId}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React,{useState} from 'react';\r\nimport Header from './components/Header'\r\nimport Sidebar from './components/Sidebar'\r\nimport Login from './components/Login'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nimport './App.css';\r\nimport Chat from './components/Chat';\r\n\r\nfunction App() {\r\n\r\n\tconst [{user}, dispatch] = useStateValue()\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<BrowserRouter>\r\n\t\t\t{\r\n\t\t\t\tuser ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Header />\r\n\t\t\t\t\t\t<div className='app__body'>\r\n\t\t\t\t\t\t\t<Sidebar />\r\n\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t<Route path=\"/slacker/room/:roomId\">\r\n\t\t\t\t\t\t\t\t\t<Chat />\r\n\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t\t<Route path=\"/slacker\">\r\n\t\t\t\t\t\t\t\t\t<h1>welcome</h1>\r\n\t\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Route path='/slacker'>\r\n\t\t\t\t\t\t<Login />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t</BrowserRouter>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {StateProvider} from './StateProvider'\r\nimport reducer, {initialState} from './reducer'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider initialState={initialState} reducer={reducer}>\r\n      <App />\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}